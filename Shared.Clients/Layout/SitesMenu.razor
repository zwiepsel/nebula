@inject ILocalizer<Translations> localizer
@inject IJSRuntime jsRuntime
@inject AppState appState

<div class="card w-100">
    <div class="d-flex align-items-center border-bottom max-height-66">
        <div class="ps-8 pt-8 pb-8">
        </div>
        <div class="fs-4 fw-bolder text-gray-900 w-100 d-flex align-items-center ">
            @localizer["sites"]
        </div>
        <div class="ms-auto d-flex p-8 bd-highlight">
            <div class="d-flex btn btn-sm btn-icon btn-active-light-primary" @onclick="@Close">
                <span class="svg-icon svg-icon-2">
                    <i class="fal fa-times"></i>
                </span>
            </div>
        </div>
    </div>
    <div class="card-body">
        <Spinner Loading="@loading" Mode="@SpinnerMode.AbsoluteCentered">
            @if (appState.User!.SiteUsers.Any())
            {
                foreach (var siteUser in appState.User.SiteUsers)
                {
                    <a href="@siteUser.Site.Uri" class="d-flex align-items-sm-center mb-7">
                        <div class="symbol symbol-80px me-5">
                            @if (siteUser.Site.Core)
                            {
                                <span class="symbol-label">
                                    <i class="fal fa-2x fa-fw fa-solar-system"></i>
                                </span>
                            }
                            else
                            {
                                <span class="symbol-label p-2">
                                    <img src="/dist/img/logos/@siteUser.Site.Name.ToLower()/logo.svg" alt="@siteUser.Site.Name" class="mh-100"/>
                                </span>
                            }
                        </div>
                        <div class="d-flex align-items-center flex-row-fluid flex-wrap">
                            <div class="flex-grow-1 me-2">
                                <span class="text-gray-800 text-hover-primary fs-6 fw-bolder">@siteUser.Site.Name</span>
                            </div>
                        </div>
                    </a>
                }
            }
            else
            {
                <p>@localizer["no_results"].</p>
            }
        </Spinner>
    </div>
</div>

@code {

    [Parameter]
    public bool Show { get; set; }

    [Parameter]
    public EventCallback<bool> ShowChanged { get; set; }

    private bool loading;

    protected override async Task OnInitializedAsync()
    {
        loading = true;

        await appState.RefreshCurrentUser();

        loading = false;
    }

    private async Task Close()
    {
        await jsRuntime.InvokeVoidAsync("OffCanvasHide", "sites-menu-view", true);

    // Wait for the transition in JS to finish.
        await Task.Delay(500);

        Show = false;
    }

}