@layout PublicLayout

@page "/security/change-password"
@attribute [Authorize(Policy = SiteRequirement.Name)]

@inject ILocalizer<Translations> localizer
@inject SecurityManager securityManager
@inject IToastService toastService

<div class="sign-in-bg-gradient d-flex flex-column flex-column-fluid bgi-position-y-bottom position-x-center bgi-no-repeat bgi-size-contain bgi-attachment-fixed">
    <div class="d-flex flex-center flex-column flex-column-fluid p-10 pb-lg-20">
        <div class="w-lg-1000px bg-white rounded shadow-sm p-10 p-lg-15 mx-auto">
            <div class="text-center mb-15">
                <h1 class="text-center text-dark">@localizer["change_password"]</h1>
            </div>
            <EditForm Model="@changePasswordModel" OnValidSubmit="@HandleChangePassword" class="form w-100">
                <FluentValidationValidator/>
                <div class="row mb-1">
                    <div class="col-lg-4">
                        <div class="fv-row mb-0 fv-plugins-icon-container">
                            <InputLabel Value="@localizer["current_password"]" Required="true"/>
                            <div class="position-relative mb-3 toggle-password-visibility">
                                <InputTextField type="@currentPasswordType" class="form-control form-control-lg form-control-solid" autocomplete="current-password" @bind-Value="@changePasswordModel.CurrentPassword"/>
                                <span @onclick="@ToggleCurrentPassword" class="btn btn-sm btn-icon position-absolute translate-middle top-50 end-0 me-n2">
                                    <i class="fa fa-eye fa-lg text-gray-400"></i>
                                    <i class="fa fa-eye-slash fa-lg text-gray-400"></i>
                                </span>
                            </div>
                            <ValidationMessage For="@(() => changePasswordModel.CurrentPassword)"/>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="fv-row mb-0 fv-plugins-icon-container">
                            <InputLabel Value="@localizer["new_password"]" Required="true"/>
                            <div class="position-relative mb-3 toggle-password-visibility">
                                <InputTextField type="@newPasswordType" class="form-control form-control-lg form-control-solid" autocomplete="new-password" @bind-Value="@changePasswordModel.NewPassword"/>
                                <span @onclick="@ToggleNewPassword" class="btn btn-sm btn-icon position-absolute translate-middle top-50 end-0 me-n2">
                                    <i class="fa fa-eye fa-lg text-gray-400"></i>
                                    <i class="fa fa-eye-slash fa-lg text-gray-400"></i>
                                </span>
                            </div>
                            <ValidationMessage For="@(() => changePasswordModel.NewPassword)"/>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="fv-row mb-0 fv-plugins-icon-container">
                            <InputLabel Value="@localizer["confirmation_password"]" Required="true"/>
                            <div class="position-relative mb-3 toggle-password-visibility">
                                <InputTextField type="@confirmationPasswordType" class="form-control form-control-lg form-control-solid" autocomplete="new-password" @bind-Value="@changePasswordModel.ConfirmationPassword"/>
                                <span @onclick="@ToggleConfirmationPassword" class="btn btn-sm btn-icon position-absolute translate-middle top-50 end-0 me-n2">
                                    <i class="fa fa-eye fa-lg text-gray-400"></i>
                                    <i class="fa fa-eye-slash fa-lg text-gray-400"></i>
                                </span>
                            </div>
                            <ValidationMessage For="@(() => changePasswordModel.ConfirmationPassword)"/>
                        </div>
                    </div>
                </div>
                <div class="d-flex justify-content-end pt-5">
                    <a href="/" class="btn text-muted text-hover-dark btn-active-light me-2"><i class="fal fa-arrow-left me-2"></i>@localizer["back_to_home"]</a>
                    <SpinnerSubmitButton Loading="@isSubmitting" LoadingText="@localizer["changing_password"]" IdleText="@localizer["change_password"]" Icon="key" Size="md" Color="light-primary" Margins="false"/>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {

    private bool isSubmitting;
    private readonly ChangePasswordModel changePasswordModel = new();

    private string currentPasswordType = "password";
    private string newPasswordType = "password";
    private string confirmationPasswordType = "password";

    private async Task HandleChangePassword()
    {
        if (isSubmitting)
        {
            return;
        }

        isSubmitting = true;

        try
        {
            await securityManager.ChangePasswordAsync(changePasswordModel);

            toastService.ShowUpdated("Password");

            changePasswordModel.CurrentPassword = null;
            changePasswordModel.NewPassword = null;
            changePasswordModel.ConfirmationPassword = null;
        }
        catch (ForbiddenHttpException)
        {
            toastService.ShowError("Current password is incorrect.");
        }
        catch (Exception)
        {
            toastService.ShowUnexpectedError();
        }

        isSubmitting = false;
    }

    private void ToggleCurrentPassword()
    {
        currentPasswordType = currentPasswordType == "password" ? "text" : "password";
    }

    private void ToggleNewPassword()
    {
        newPasswordType = newPasswordType == "password" ? "text" : "password";
    }

    private void ToggleConfirmationPassword()
    {
        confirmationPasswordType = confirmationPasswordType == "password" ? "text" : "password";
    }

}