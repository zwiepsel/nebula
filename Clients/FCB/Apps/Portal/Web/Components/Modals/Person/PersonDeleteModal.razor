@inject IToastService toastService
@inject PersonRepository personRepository

<Modal>
    <ModalSubTitle>Weet je zeker dat je dit wilt? Dit kan niet meer ongedaan worden..</ModalSubTitle>
    <ModalFooter>
        <SpinnerButton Method="@Delete" Loading="@isSubmitting" LoadingText="Deleting..." IdleText="Delete" Icon="trash" Size="md" Color="light-danger" Margins="false"/>
    </ModalFooter>
</Modal>

@code
{

    [CascadingParameter]  
    public BlazoredModalInstance Modal { get; set; } = null!;

    [Parameter]
    public int PersonId { get; set; }

    private bool isSubmitting;

    private async Task Delete()
    {
        if (isSubmitting)
        {
            return;
        }

        isSubmitting = true;

        try
        {
            await personRepository.Delete(PersonId);
            toastService.ShowRemoved("Persoon");
            await Modal.CloseAsync(ModalResult.Ok(PersonId));
        }
        catch (Exception)
        {
            await Modal.CancelAsync();
            toastService.ShowUnexpectedError();
        }

        isSubmitting = false;
    }

}