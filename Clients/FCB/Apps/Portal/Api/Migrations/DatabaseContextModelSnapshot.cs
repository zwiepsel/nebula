// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nebula.Clients.FCB.Apps.Portal.Api.Infrastructure.Data;

#nullable disable

namespace Nebula.Clients.FCB.Apps.Portal.Api.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.AgeScale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<int>("MaxAge")
                        .HasColumnType("int");

                    b.Property<int>("MinAge")
                        .HasColumnType("int");

                    b.Property<string>("Scale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AgeScales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            Deleted = false,
                            MaxAge = 20,
                            MinAge = 0,
                            Scale = "1"
                        });
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("AdultQty")
                        .HasColumnType("int");

                    b.Property<string>("AgeClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ApplicantPreferredNeighborhood1Id")
                        .HasColumnType("int");

                    b.Property<int?>("ApplicantPreferredNeighborhood2Id")
                        .HasColumnType("int");

                    b.Property<int?>("ApplicantPreferredNeighborhood3Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApplicationDate")
                        .HasColumnType("Date");

                    b.Property<int>("Bedrooms")
                        .HasColumnType("int");

                    b.Property<decimal>("ChildDiscount")
                        .HasColumnType("decimal(3,2)");

                    b.Property<int>("ChildrenQty")
                        .HasColumnType("int");

                    b.Property<int>("ClientStatus")
                        .HasColumnType("int");

                    b.Property<int>("ClientTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("DebtorCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("FamilyState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InterestedInBuying")
                        .HasColumnType("bit");

                    b.Property<bool>("LookingForHouse")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaxRent")
                        .HasColumnType("decimal(19,4)");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MinorQty")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<bool>("Urgency")
                        .HasColumnType("bit");

                    b.Property<decimal>("YearlyIncome")
                        .HasColumnType("decimal(19,4)");

                    b.Property<string>("YearlyIncomeClass")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantPreferredNeighborhood1Id");

                    b.HasIndex("ApplicantPreferredNeighborhood2Id");

                    b.HasIndex("ApplicantPreferredNeighborhood3Id");

                    b.HasIndex("ClientTypeId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.ClientType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ClientTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 0,
                            Deleted = false,
                            Type = "Woningzoekende"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 0,
                            Deleted = false,
                            Type = "Huurder"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 0,
                            Deleted = false,
                            Type = "Ex-Huurder"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 0,
                            Deleted = false,
                            Type = "Ex-Woningzoekende"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 0,
                            Deleted = false,
                            Type = "Onderneming"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 0,
                            Deleted = false,
                            Type = "Leverancier"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 0,
                            Deleted = false,
                            Type = "Overig"
                        });
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Complex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConstructionYear")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<int>("HouseQty")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NeighborhoodId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<string>("VastCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NeighborhoodId");

                    b.ToTable("Complexes");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<int>("FileTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("FileTypeId");

                    b.HasIndex("RequestId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.FileType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FileTypes");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2021, 11, 26, 11, 35, 10, 300, DateTimeKind.Local).AddTicks(6492),
                            CreatedById = 1,
                            Deleted = false,
                            Name = "Sedula"
                        });
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.House", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("AppraisalDate")
                        .HasColumnType("date");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Collateral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CollateralValue")
                        .HasColumnType("decimal(19,4)");

                    b.Property<int>("ComplexId")
                        .HasColumnType("int");

                    b.Property<decimal>("ConstructionCosts")
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime?>("ConstructionDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<decimal?>("GroundLease")
                        .HasColumnType("decimal(19,4)");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LandRegistryNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("MarketValue")
                        .HasColumnType("decimal(19,4)");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NeighborhoodId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfBedrooms")
                        .HasColumnType("int");

                    b.Property<int>("Ownership")
                        .HasColumnType("int");

                    b.Property<decimal?>("RenovationCosts")
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime?>("RenovationDate")
                        .HasColumnType("date");

                    b.Property<int>("RentBasePoints")
                        .HasColumnType("int");

                    b.Property<decimal>("RentBasePrice")
                        .HasColumnType("decimal(19,4)");

                    b.Property<int>("SquareMetersBvo")
                        .HasColumnType("int");

                    b.Property<int>("SquareMetersFcb")
                        .HasColumnType("int");

                    b.Property<int>("SquareMetersGo")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplexId");

                    b.HasIndex("NeighborhoodId");

                    b.ToTable("Houses");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.IncomeScale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<double>("MaxAmount")
                        .HasColumnType("float");

                    b.Property<double>("MinAmount")
                        .HasColumnType("float");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.Property<string>("RentClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("IncomeScales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 0,
                            Deleted = false,
                            MaxAmount = 2793.0,
                            MinAmount = 0.0,
                            Percentage = 10.0,
                            RentClass = "< 23",
                            Scale = "< $2793"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 0,
                            Deleted = false,
                            MaxAmount = 5587.0,
                            MinAmount = 2793.0100000000002,
                            Percentage = 12.5,
                            RentClass = "29 - 58",
                            Scale = "$2974 - $5587"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 0,
                            Deleted = false,
                            MaxAmount = 8380.0,
                            MinAmount = 5587.0100000000002,
                            Percentage = 15.0,
                            RentClass = "69-105",
                            Scale = "$5588 - $8380"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 0,
                            Deleted = false,
                            MaxAmount = 11173.0,
                            MinAmount = 8380.0100000000002,
                            Percentage = 18.0,
                            RentClass = "125 - 168",
                            Scale = "$8381 - $11173"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 0,
                            Deleted = false,
                            MaxAmount = 13966.0,
                            MinAmount = 11173.01,
                            Percentage = 21.0,
                            RentClass = "195 - 224",
                            Scale = "$11174 - $13966"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 0,
                            Deleted = false,
                            MaxAmount = 16760.0,
                            MinAmount = 13966.01,
                            Percentage = 24.0,
                            RentClass = "279 - 335",
                            Scale = "$13967 - $16760"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 0,
                            Deleted = false,
                            MaxAmount = 19553.0,
                            MinAmount = 67060.009999999995,
                            Percentage = 27.0,
                            RentClass = "377 - 440",
                            Scale = "$16761 - $19553"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 0,
                            Deleted = false,
                            MaxAmount = 22346.0,
                            MinAmount = 19553.009999999998,
                            Percentage = 30.0,
                            RentClass = "488 - 559",
                            Scale = "$19554 - $22346"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 0,
                            Deleted = false,
                            MaxAmount = 999999.0,
                            MinAmount = 22346.009999999998,
                            Percentage = 30.0,
                            RentClass = "> 559",
                            Scale = "> $22347"
                        });
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.LeaseAgreement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DepositDate")
                        .HasColumnType("date");

                    b.Property<decimal>("DepositValue")
                        .HasColumnType("decimal(19,2)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("HouseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("HouseId");

                    b.ToTable("LeaseAgreements");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Neighborhood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<int>("Valuation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Neighborhoods");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CountryOfBirth")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LeftHome")
                        .HasColumnType("bit");

                    b.Property<bool>("MainContact")
                        .HasColumnType("bit");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Prefix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RelationType")
                        .HasColumnType("int");

                    b.Property<bool>("SchoolGoing")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Process", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcessStructureId")
                        .HasColumnType("int");

                    b.Property<int>("ProcessTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcessTypeId");

                    b.ToTable("Processes");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.ProcessDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AfterStep")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("date");

                    b.Property<int>("ProcessId")
                        .HasColumnType("int");

                    b.Property<int?>("SiteUserGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("SiteUserId")
                        .HasColumnType("int");

                    b.Property<int>("Step")
                        .HasColumnType("int");

                    b.Property<string>("StepName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcessId");

                    b.ToTable("ProcessDetail");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.ProcessStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AfterStep")
                        .HasColumnType("int");

                    b.Property<int>("CompletionDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcessTypeId")
                        .HasColumnType("int");

                    b.Property<string>("QueryCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SiteUserGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("SiteUserId")
                        .HasColumnType("int");

                    b.Property<string>("StepName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StepNr")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcessTypeId");

                    b.ToTable("ProcessStructures");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.ProcessType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcessTypeIdComplete")
                        .HasColumnType("int");

                    b.Property<int?>("RequestTypeId")
                        .HasColumnType("int");

                    b.Property<int>("TriggerTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequestTypeId")
                        .IsUnique()
                        .HasFilter("[RequestTypeId] IS NOT NULL");

                    b.HasIndex("TriggerTypeId");

                    b.ToTable("ProcessTypes");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Rent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("AskPrice")
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal>("ContractPrice")
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("LeaseAgreementId")
                        .HasColumnType("int");

                    b.Property<decimal>("PointValue")
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal>("RentPrice")
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeaseAgreementId");

                    b.ToTable("Rents");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AdultQty")
                        .HasColumnType("int");

                    b.Property<int>("ChildrenQty")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HouseId")
                        .HasColumnType("int");

                    b.Property<int>("IncomeScaleId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("ProcessId")
                        .HasColumnType("int");

                    b.Property<string>("Ref1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ref2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ref3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestStatusId")
                        .HasColumnType("int");

                    b.Property<int>("RequestTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("SiteUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("HouseId");

                    b.HasIndex("IncomeScaleId");

                    b.HasIndex("PersonId");

                    b.HasIndex("RequestTypeId");

                    b.ToTable("Request");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.RequestType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RequestType");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AfterStep")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("date");

                    b.Property<int>("ProcessDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.Property<int>("SiteUserId")
                        .HasColumnType("int");

                    b.Property<int>("Step")
                        .HasColumnType("int");

                    b.Property<int>("TaskStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcessDetailId");

                    b.HasIndex("RequestId");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.TriggerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TriggerType");
                });

            modelBuilder.Entity("ProcessRequest", b =>
                {
                    b.Property<int>("ProcessesId")
                        .HasColumnType("int");

                    b.Property<int>("RequestsId")
                        .HasColumnType("int");

                    b.HasKey("ProcessesId", "RequestsId");

                    b.HasIndex("RequestsId");

                    b.ToTable("ProcessRequest");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Client", b =>
                {
                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Neighborhood", "ApplicantPreferredNeighborhood1")
                        .WithMany()
                        .HasForeignKey("ApplicantPreferredNeighborhood1Id");

                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Neighborhood", "ApplicantPreferredNeighborhood2")
                        .WithMany()
                        .HasForeignKey("ApplicantPreferredNeighborhood2Id");

                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Neighborhood", "ApplicantPreferredNeighborhood3")
                        .WithMany()
                        .HasForeignKey("ApplicantPreferredNeighborhood3Id");

                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.ClientType", "ClientType")
                        .WithMany()
                        .HasForeignKey("ClientTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicantPreferredNeighborhood1");

                    b.Navigation("ApplicantPreferredNeighborhood2");

                    b.Navigation("ApplicantPreferredNeighborhood3");

                    b.Navigation("ClientType");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Complex", b =>
                {
                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Neighborhood", "Neighborhood")
                        .WithMany()
                        .HasForeignKey("NeighborhoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Neighborhood");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.File", b =>
                {
                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.FileType", "FileType")
                        .WithMany()
                        .HasForeignKey("FileTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Request", "Request")
                        .WithMany()
                        .HasForeignKey("RequestId");

                    b.Navigation("Client");

                    b.Navigation("FileType");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.House", b =>
                {
                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Complex", "Complex")
                        .WithMany()
                        .HasForeignKey("ComplexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Neighborhood", "Neighborhood")
                        .WithMany()
                        .HasForeignKey("NeighborhoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Complex");

                    b.Navigation("Neighborhood");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Income", b =>
                {
                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Person", "Person")
                        .WithMany("Incomes")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.LeaseAgreement", b =>
                {
                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Client", "Client")
                        .WithMany("LeaseAgreements")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.House", "House")
                        .WithMany("LeaseAgreements")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("House");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Person", b =>
                {
                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Client", "Client")
                        .WithMany("Persons")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Process", b =>
                {
                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.ProcessType", "ProcessType")
                        .WithMany()
                        .HasForeignKey("ProcessTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcessType");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.ProcessDetail", b =>
                {
                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Process", "Process")
                        .WithMany("ProcessDetails")
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Process");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.ProcessStructure", b =>
                {
                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.ProcessType", "ProcessType")
                        .WithMany()
                        .HasForeignKey("ProcessTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcessType");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.ProcessType", b =>
                {
                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.RequestType", "RequestType")
                        .WithOne()
                        .HasForeignKey("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.ProcessType", "RequestTypeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.TriggerType", "TriggerType")
                        .WithMany()
                        .HasForeignKey("TriggerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequestType");

                    b.Navigation("TriggerType");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Rent", b =>
                {
                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.LeaseAgreement", "LeaseAgreement")
                        .WithMany("Rents")
                        .HasForeignKey("LeaseAgreementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LeaseAgreement");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Request", b =>
                {
                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.House", "House")
                        .WithMany()
                        .HasForeignKey("HouseId");

                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.IncomeScale", "IncomeScale")
                        .WithMany()
                        .HasForeignKey("IncomeScaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.RequestType", "RequestType")
                        .WithMany()
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("House");

                    b.Navigation("IncomeScale");

                    b.Navigation("Person");

                    b.Navigation("RequestType");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Task", b =>
                {
                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.ProcessDetail", "ProcessDetail")
                        .WithMany()
                        .HasForeignKey("ProcessDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Request", null)
                        .WithMany("Tasks")
                        .HasForeignKey("RequestId");

                    b.Navigation("ProcessDetail");
                });

            modelBuilder.Entity("ProcessRequest", b =>
                {
                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Process", null)
                        .WithMany()
                        .HasForeignKey("ProcessesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Request", null)
                        .WithMany()
                        .HasForeignKey("RequestsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Client", b =>
                {
                    b.Navigation("LeaseAgreements");

                    b.Navigation("Persons");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.House", b =>
                {
                    b.Navigation("LeaseAgreements");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.LeaseAgreement", b =>
                {
                    b.Navigation("Rents");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Person", b =>
                {
                    b.Navigation("Incomes");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Process", b =>
                {
                    b.Navigation("ProcessDetails");
                });

            modelBuilder.Entity("Nebula.Clients.FCB.Apps.Portal.Api.Domain.Entities.Request", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
